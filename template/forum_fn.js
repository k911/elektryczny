function find_username(e){"use strict";return popup(e,760,570,"_usersearch"),!1}function popup(e,t,i,n){"use strict";return window.open(e.replace(/&amp;/g,"&"),n||"_popup","height="+i+",resizable=yes,scrollbars=yes, width="+t),!1}function pageJump(e){"use strict";var t=parseInt(e.val(),10),i=e.attr("data-per-page"),n=e.attr("data-base-url"),s=e.attr("data-start-name");null!==t&&!isNaN(t)&&t===Math.floor(t)&&t>0&&(-1===n.indexOf("?")?document.location.href=n+"?"+s+"="+(t-1)*i:document.location.href=n.replace(/&amp;/g,"&")+"&"+s+"="+(t-1)*i)}function marklist(e,t,i){"use strict";jQuery("#"+e+" input[type=checkbox][name]").each(function(){var e=jQuery(this);e.attr("name").substr(0,t.length)===t&&e.prop("checked",i)})}function viewableArea(e,t){"use strict";if(e){var i=t?e:e.parentNode;i.vaHeight?(i.style.height=i.vaHeight+"px",i.style.overflow="auto",i.style.maxHeight=i.vaMaxHeight,i.vaHeight=!1):(i.vaHeight=i.offsetHeight,i.vaMaxHeight=i.style.maxHeight,i.style.height="auto",i.style.maxHeight="none",i.style.overflow="visible")}}function activateSubPanel(e,t){"use strict";var i,n,s=void 0===t?jQuery(".sub-panels a[data-subpanel]").map(function(){return this.getAttribute("data-subpanel")}):t;for("string"==typeof e&&(n=e),$('input[name="show_panel"]').val(n),i=0;i<s.length;i++)jQuery("#"+s[i]).css("display",s[i]===n?"block":"none"),jQuery("#"+s[i]+"-tab").toggleClass("activetab",s[i]===n)}function selectCode(e){"use strict";var t,i,n=e.parentNode.parentNode.getElementsByTagName("CODE")[0];if(window.getSelection)if(t=window.getSelection(),t.setBaseAndExtent){var s=n.innerText.length>1?n.innerText.length-1:1;try{t.setBaseAndExtent(n,0,n,s)}catch(e){i=document.createRange(),i.selectNodeContents(n),t.removeAllRanges(),t.addRange(i)}}else window.opera&&"<BR>"===n.innerHTML.substring(n.innerHTML.length-4)&&(n.innerHTML=n.innerHTML+"&nbsp;"),i=document.createRange(),i.selectNodeContents(n),t.removeAllRanges(),t.addRange(i);else document.getSelection?(t=document.getSelection(),i=document.createRange(),i.selectNodeContents(n),t.removeAllRanges(),t.addRange(i)):document.selection&&(i=document.body.createTextRange(),i.moveToElementText(n),i.select())}function play_qt_file(e){"use strict";var t,i,n=e.GetRectangle();if(n){n=n.split(",");var s=parseInt(n[0],10),a=parseInt(n[2],10),o=parseInt(n[1],10),r=parseInt(n[3],10);t=s<0?-1*s+a:a-s,i=o<0?-1*o+r:r-o}else t=200,i=0;e.width=t,e.height=i+16,e.SetControllerVisible(!0),e.Play()}function phpbbCheckKey(e){"use strict";return!e.keyCode||40!==e.keyCode&&38!==e.keyCode||(inAutocomplete=!0),!inAutocomplete||lastKeyEntered&&lastKeyEntered!==e.which?13!==e.which&&(lastKeyEntered=e.which,!0):(inAutocomplete=!1,!0)}function insertUser(e,t){"use strict";var i=jQuery(e),n=i.attr("data-form-name"),s=i.attr("data-field-name"),a=opener.document.forms[n][s];a.value.length&&"textarea"===a.type&&(t=a.value+"\n"+t),a.value=t}function insert_marked_users(e,t){"use strict";for(var i=0;i<t.length;i++)t[i].checked&&insertUser(e,t[i].value);window.close()}function insert_single_user(e,t){"use strict";insertUser(e,t),window.close()}function adjustPosterProfile(e){var t=e.parent().prev(),i=t.parent(),n=t.hasClass("resized");if(i.width()<t.width()+e.width())return void(n&&function(){t.removeClass("resized").css("min-height","")}());n&&t.css("min-height",""),t.css("min-height",Math.floor(e.height())+"px").addClass("resized")}function checkNavigation(e){function t(e){e.responsive=!1,e.lastWidth=0,e.itemCount=0,e.contents=e.menu.find(".dropdown-contents:first"),e.canToggle=$(),e.noToggle=$(),e.contents.children(".separator:last-child").hide(),e.items=e.lists.children().not(e.menu).each(function(t){var i,n=$(this);if(n.is(".not-responsive, .responsive-menu, .dropdown-container, .selected")||"true"===n.attr("data-skip-responsive"))return n.attr("data-responsive-index",-1),void(e.noToggle=e.noToggle.add(n));i=n.attr("data-responsive-class")||n.hasClass("small-icon")?n.attr("class"):" responsive-index-"+t,e.contents.append(n.clone(!0).attr("class",i).addClass("responsive-clone").removeClass("tab")),n.addClass("responsive-cloned-item").attr("data-clone-index",t),e.canToggle=e.canToggle.add(n),e.itemCount++}),e.contents.find("a.nav-link").removeClass("nav-link"),e.responsiveClones=e.contents.children(".responsive-clone").hide(),e.initialized=!0}for(var i=0;i<styleConfig._responsiveNavigation.length;i++)!function(e,i){var n,s,a,o;e.initialized||(t(e),i=!0),e.itemCount&&(n=e.container.width(),(i||n!==e.lastWidth)&&(e.lastWidth=n,e.responsive&&(e.canToggle.show(),e.responsiveClones.hide(),e.menu.removeClass("showing-responsive-menu"),e.alwaysShowMenu||e.menu.show()),e.responsive=!1,a=e.menu.outerWidth(!0),s=a,e.noToggle.each(function(){var e=$(this);e.is(":visible")&&(s+=e.outerWidth(!0))}),o=s>=n,e.canToggle.each(function(){var t,i=$(this);if(i.is(":visible")){if(!o){if(!(t=i.outerWidth(!0)))return void i.hide();(s+=t)>=n&&(o=!0)}o&&(i.hide(),e.responsiveClones.filter(".responsive-index-"+i.attr("data-clone-index")).show())}}),e.responsive=o,o||e.alwaysShowMenu?o&&e.menu.addClass("showing-responsive-menu"):e.menu.hide()))}(styleConfig._responsiveNavigation[i],e)}function initResponsiveNavigation(){styleConfig._responsiveNavigation=[],$(".nav-tabs, .navbar.secondary").each(function(){var e=$(this),t=e.children("ul"),i=t.children(".responsive-menu:first"),n=i.length>0;if(!i.length){if(e.is(".nav-tabs"))return;t.eq(0).prepend('<li class="responsive-menu dropdown-container" style="display: none;"><a href="#" class="dropdown-trigger dropdown-toggle"><i class="mdi mdi-menu" aria-hidden="true"></a><div class="dropdown hidden"><div class="pointer"><div class="pointer-inner"></div></div><ul class="dropdown-contents" /></ul></div></li>'),i=t.children(".responsive-menu:first"),phpbb.registerDropdown(i.find(".dropdown-toggle"),i.find(".dropdown"))}styleConfig._responsiveNavigation.push({container:e,lists:t,menu:i,initialized:!1,alwaysShowMenu:n})})}function parseDocument(e){"use strict";var t=document.createElement("div"),i=void 0===t.style.borderRadius,n=$("body");e.find(".nav-tabs").each(function(){var e=$(this).children().children();e.not(".tab").each(function(){var e=$(this),t=e.attr("class").split(" ");e.attr("class","tab");for(var i=0;i<t.length;i++)"icon-"===t[i].substr(0,5)&&e.addClass(t[i].substr(5))}).children(":first-child").addClass("nav-link"),e.each(function(){var e=$(this),t="";if(!e.attr("title")){if(t=e.children(".nav-link").text().trim(),!t.length)return;e.children(".nav-link + strong").each(function(){t+=" ("+$(this).text().trim()+")"}),e.attr("title",t)}})}),e.find(".nav-tabs[data-current-page]").each(function(){var t,i,n,s,a=$(this),o=a.attr("data-current-page"),r=!1;if($(".tab[data-select-match]",this).each(function(){for(var e,t,i=$(this).attr("data-select-match").split(","),n=0;n<i.length;n++)if(e=i[n].trim(),-1!==o.indexOf(e))return t=$(this),t.hasClass("selected")||(a.find(".tab.selected").removeClass("selected"),t.addClass("selected")),void(r=!0)}),!r&&(t=e.find(".content.pages-content"),t.length)){for(i=t.prop("class").split(" "),n=0;n<i.length&&!r;n++)"content"!==(s=i[n].trim())&&"pages-content"!==s&&e.find(".tab.pages."+s).each(function(){a.find(".tab.selected").removeClass("selected"),$(this).addClass("selected"),r=!0});if(r)return;e.find(".tab.pages:first").each(function(){a.find(".tab.selected").removeClass("selected"),$(this).addClass("selected"),r=!0})}}),e.find("input[data-reset-on-edit]").on("keyup",function(){$(this.getAttribute("data-reset-on-edit")).val("")}),e.find(".pagination .page-jump-form :button").click(function(){pageJump($(this).siblings("input.inputbox"))}),e.find(".pagination .page-jump-form input.inputbox").on("keypress",function(e){13!==e.which&&13!==e.keyCode||(e.preventDefault(),pageJump($(this)))}),e.find(".pagination .dropdown-trigger").click(function(){var e=$(this).parent();setTimeout(function(){e.hasClass("dropdown-visible")&&e.find("input.inputbox").focus()},100)}),e.find(".navlinks").each(function(){function e(){var e,s=0,o=i.outerWidth(!0)-i.width(),r=Math.max(t.width()/3,240);a=!1,n.each(function(){$(this).is(":visible")&&(s+=$(this).outerWidth(!0))}),e=t.width()-s-o,i.css("max-width",Math.floor(Math.max(e,r))+"px")}var t=$(this),i=t.children().not(".rightside"),n=t.children(".rightside"),s=!1,a=!1;1===i.length&&n.length&&(e(),$(window).resize(function(){a?s=!0:(e(),a=!0,s=!1,setTimeout(function(){a=!1,s&&e()},250))}))}),e.find(".breadcrumbs:not([data-skip-responsive])").each(function(){function e(){var e,c=t.height();if(e=parseInt(t.css("max-width"),10),e||(e=n.width()),h=!1,r=parseInt(t.css("line-height"),10),i.each(function(){$(this).height()>0&&(r=Math.max(r,$(this).outerHeight(!0)))}),!(c<=r&&(!l||!1===d||d>=e)||(d=e,l&&(t.removeClass("wrapped").find(".crumb.wrapped").removeClass("wrapped "+a.join(" ")),t.height()<=r)||(l=!0,t.addClass("wrapped"),t.height()<=r))))for(var p=0;p<o;p++)for(var u=s-1;u>=0;u--)if(i.eq(u).addClass("wrapped "+a[p]),t.height()<=r)return}var t=$(this),i=t.find(".crumb"),s=i.length,a=["wrapped-max","wrapped-wide","wrapped-medium","wrapped-small","wrapped-tiny"],o=a.length,r=0,d=!1,l=!1,c=!1,h=!1;t.find("a").each(function(){var e=$(this);e.attr("title",e.text())}),e(),$(window).resize(function(){h?c=!0:(e(),h=!0,c=!1,setTimeout(function(){h=!1,c&&e()},250))})});e.find(".linklist:not(.navlinks, [data-skip-responsive]),.postbody .post-buttons:not([data-skip-responsive])").each(function(){function e(){var e=n.width();if(!(v&&f&&e<=u||(u=e,(g||v)&&(a.removeClass("hidden"),h.children(".clone").addClass("hidden"),g=v=!1),f&&(t.removeClass("compact"),f=!1),d&&p?c.removeClass("hidden"):c.addClass("hidden"),t.height()<=w||(f||(t.addClass("compact"),f=!0),t.height()<=w)))){if(f&&(t.removeClass("compact"),f=!1),!m){var i=o.clone();h.prepend(i.addClass("clone clone-first").removeClass("leftside rightside")),t.hasClass("post-buttons")&&($(".button",h).removeClass("button icon-button"),$(".responsive-menu-link",c).addClass("button icon-button").prepend("<span></span>")),m=!0}if(g||(o.addClass("hidden"),g=!0,h.children(".clone-first").removeClass("hidden"),c.removeClass("hidden")),!(t.height()<=w)&&(f||(t.addClass("compact"),f=!0),!(t.height()<=w)&&r.length)){if(f&&(t.removeClass("compact"),f=!1),!b){var s=r.clone();h.prepend(s.addClass("clone clone-last").removeClass("leftside rightside")),b=!0}v||(r.addClass("hidden"),v=!0,h.children(".clone-last").removeClass("hidden")),t.height()<=w||f||(t.addClass("compact"),f=!0)}}}var t=$(this),i=".edit-icon, .quote-icon, [data-last-responsive]",s=t.children(),a=s.not(".breadcrumbs, [data-skip-responsive]"),o=a.not(i),r=a.filter(i),d="nav-main"===t.attr("id"),l='<li class="responsive-menu hidden"><a href="javascript:void(0);" class="responsive-menu-link"></a><div class="dropdown hidden"><div class="pointer"><div class="pointer-inner" /></div><ul class="dropdown-contents" /></div></li>';d||(a.is(".rightside")?(a.filter(".rightside:first").before(l),t.children(".responsive-menu").addClass("rightside")):t.append(l));var c=t.children(".responsive-menu"),h=c.find(".dropdown-contents"),p=h.find("li:not(.separator)").length,u=!1,f=!1,g=!1,v=!1,m=!1,b=!1,w=0;s.each(function(){$(this).height()&&(w=Math.max(w,$(this).outerHeight(!0)))}),w<1||(w+=3,d||phpbb.registerDropdown(c.find("a.responsive-menu-link"),c.find(".dropdown"),!1),s.find("img").each(function(){$(this).load(function(){e()})}),e(),$(window).resize(e))}),e.find(".postbody").each(function(){var e=$(this),t=e.children();1===t.length&&t.is("div")||e.wrapInner('<div class="postbody-inner" />')}),$(".postprofile").each(function(e){var t=Math.max(28-e,2);$(this).css("z-index",t)}),i||(e.find("ul.topiclist dd.mark").siblings("dt").children(".list-inner").addClass("with-mark"),e.find(".topiclist.responsive-show-all > li > dl").each(function(){var e=$(this),t=e.find("dt .responsive-show:last-child"),i=!0;t.length?i=0===$.trim(t.text()).length:(e.find("dt > .list-inner").append('<div class="responsive-show" style="display:none;" />'),t=e.find("dt .responsive-show:last-child")),e.find("dd").not(".mark").each(function(){var e=$(this),n=e.children(),s=e.html();1===n.length&&n.text()===e.text()&&(s=n.html()),t.append((i?"":"<br />")+s),i=!1})}),e.find(".topiclist.responsive-show-columns").each(function(){var e=$(this),t=[],i=0;e.prev(".topiclist").find("li.header dd").not(".mark").each(function(){t.push($(this).text()),i++}),i&&e.find("dl").each(function(){var e=$(this),n=e.find("dt .responsive-show:last-child"),s=!0;n.length?s=0===$.trim(n.text()).length:(e.find("dt > .list-inner").append('<div class="responsive-show" style="display:none;" />'),n=e.find("dt .responsive-show:last-child")),e.find("dd").not(".mark").each(function(e){var a=$(this),o=a.children(),r=a.html();1===o.length&&o.text()===a.text()&&(r=o.html()),e<i&&(r=t[e]+": <strong>"+r+"</strong>"),n.append((s?"":"<br />")+r),s=!1})})}),e.find("table.table1").not(".not-responsive").each(function(){var e,t=$(this),i=t.find("thead > tr > th"),n=[],s=0;if(i.each(function(e){var i=$(this),a=parseInt(i.attr("colspan"),10),o=i.attr("data-dfn"),r=o||i.text();a=isNaN(a)||a<1?1:a;for(var d=0;d<a;d++)n.push(r);s++,o&&!e&&t.addClass("show-header")}),e=n.length,t.addClass("responsive"),s<2)return void t.addClass("show-header");t.find("tbody > tr").each(function(){var t=$(this),i=t.children("td"),s=0;if(1===i.length)return void t.addClass("big-column");i.each(function(){var t=$(this),i=parseInt(t.attr("colspan"),10),a=$.trim(t.text());e<=s||(a.length&&"-"!==a||t.children().length?t.prepend('<dfn style="display: none;">'+n[s]+"</dfn>"):t.addClass("empty"),i=isNaN(i)||i<1?1:i,s+=i)})})}),e.find("table.responsive > tbody").not(".responsive-skip-empty").each(function(){$(this).children("tr").length||$(this).parent("table:first").addClass("responsive-hide")}),e.find("#tabs, #minitabs").not("[data-skip-responsive]").each(function(){function e(){var i=n.width(),a=t.height();if(arguments.length||c&&!(i<=l)||!(a<=d)){if(s.show(),o.hide(),l=i,(a=t.height())<=d)return void(o.hasClass("dropdown-visible")&&phpbb.toggleDropdown.call(o.find("a.responsive-tab-link").get(0)));c=!0,o.show(),r.html("");for(var h,p=s.filter(":not(.activetab, .responsive-tab)"),u=p.length,f=u-1;f>=0;f--)if(h=p.eq(f),r.prepend(h.clone(!0).removeClass("tab")),h.hide(),t.height()<=d)return void r.find("a").click(function(){e(!0)});r.find("a").click(function(){e(!0)})}}var t=$(this),i=t.children(),s=i.children().not("[data-skip-responsive]"),a=s.children("a"),o=i.append('<li class="tab responsive-tab" style="display:none;"><a href="javascript:void(0);" class="responsive-tab-link">&nbsp;</a><div class="dropdown tab-dropdown" style="display: none;"><div class="pointer"><div class="pointer-inner" /></div><ul class="dropdown-contents" /></div></li>').find("li.responsive-tab"),r=o.find(".dropdown-contents"),d=0,l=!1,c=!1;a.each(function(){d=Math.max(d,Math.max($(this).outerHeight(!0),$(this).parent().outerHeight(!0)))});var h=o.find("a.responsive-tab-link");phpbb.registerDropdown(h,o.find(".dropdown"),{visibleClass:"activetab"}),e(!0),$(window).resize(e)}),e.find("#navigation").each(function(){1===$(this).children("ol, ul").children("li").length&&$(this).addClass("responsive-hide")}),e.find("[data-responsive-text]").each(function(){function e(){if($(window).width()>700){if(!s)return;return t.text(i),void(s=!1)}s||(t.text(n),s=!0)}var t=$(this),i=t.text(),n=t.attr("data-responsive-text"),s=!1;e(),$(window).resize(e)}),styleConfig.staticNavigation&&e.find(".navbar.tabbed > .inner").each(function(e){function t(){$("#page-header-box").css("padding-top",Math.floor(o.height())+"px"),o.addClass("static"),d.removeClass("not-static"),r=!0,checkNavigation(!0)}function i(){$("#page-header-box").css("padding-top",0),g.attr("data-card",0),v.attr("data-card",1),o.removeClass("static"),d.addClass("not-static"),r=!1,checkNavigation(!0)}function n(){(window.location.hash?window.location.hash:"")&&window.scrollTo(l.scrollLeft(),l.scrollTop()-o.height())}function s(e){var s,o=Math.floor(l.width());if(o<h||l.height()<p)return void(r&&i());if(!r){if((s=a.getBoundingClientRect().top)>0)return;return c=l.scrollTop()+s,t(),void(e&&n())}l.scrollTop()<c?i():e&&n()}var a=this,o=$(a),r=!1,d=o.parent(),l=$(window),c=0,h=styleConfig.staticNavigationMinWidth,p=styleConfig.staticNavigationMinHeight,u=!1,f=!1,g=$(".inner.page-width.card"),v=$("#page-header-box.card"),m=0,b=0,w=0;l.on("scroll resize",function(){r?(f?u=!0:(s(!1),f=!0,u=!1,setTimeout(function(){f=!1,u&&s(!1)},250)),b=l.scrollTop(),m=v.height(),Math.abs(b-w)>Math.abs(m-w)&&(b<m?(g.attr("data-card",0),v.attr("data-card",1)):(g.attr("data-card",1),v.attr("data-card",0)),w=b)):s(!1)}),l.on("load",function(){s(!0)}),l.on("hashchange",function(){s(!0)})}),e.find("dd.lastpost > span:only-child > br:only-child").parents("dd.lastpost").addClass("empty"),$("a.spoiler").click(function(e){e.preventDefault(),$(this).next("div.spoiler").show(),$(this).hide()}),window.matchMedia&&window.matchMedia("(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 1.5dppx)").matches&&e.find("img[data-src-hd]").each(function(){function e(){i.css("width",(t.naturalWidth?t.naturalWidth:t.width)+"px"),t.setAttribute("src",t.getAttribute("data-src-hd"))}var t=this,i=$(this),n=new Image,s=!1,a=!1;t.complete?a=!0:t.onload=function(){a||(a=!0,s&&e())},n.onload=function(){s=!0,a&&e()},n.src=t.getAttribute("data-src-hd")}),e.find("div.buttons a.button.icon-button").each(function(){var e,t=$(this);t.children().length||(e=t.text().trim().split(" "),e.length>1&&(t.text(e.shift()+" ").append("<strong />"),t.find("strong").text(e.join(" "))))}),$("#phpbb.can-transform[data-online-text]").each(function(){var t=$(this).attr("data-online-text");e.find(".online").each(function(){$(this).css("position","relative").append('<span class="online-ribbon"><span>'+t+"</span><span>"+t+"</span></span>")})}),styleConfig._loaded&&e.find(".postprofile + .postbody > div:only-child").each(function(){adjustPosterProfile($(this))}),styleConfig.collapseForums&&e.find(".forabg li.header").each(function(){var e,t=$(this),i=t.parent().next("ul.forums"),n=0,s=!1;1===i.length&&($("a[data-id]",t).each(function(){n=parseInt(this.getAttribute("data-id"),10)}),n||i.find(".forumtitle[data-id]:first").each(function(){n=parseInt(this.getAttribute("data-id"),10),isNaN(n)||(n="f"+n)}),n&&(t.append('<a class="forum-toggle" href="#"></a>'),e=t.find(".forum-toggle"),e.click(function(t){if(t.preventDefault(),s)return i.stop(!0,!0).slideDown(200),s=!1,e.removeClass("toggled"),void phpbb.deleteCookie("toggled-"+n,styleConfig.cookieConfig);i.stop(!0,!0).slideUp(200),s=!0,e.addClass("toggled"),phpbb.setCookie("toggled-"+n,"1",styleConfig.cookieConfig)}),"1"===phpbb.getCookie("toggled-"+n,styleConfig.cookieConfig)&&(i.stop(!0,!0).slideUp(0),s=!0,e.addClass("toggled"))))}))}var styleConfig={staticNavigation:!0,staticNavigationMinWidth:700,staticNavigationMinHeight:400,extendPosterProfile:!0,collapseForums:!0},globalUnused=!0;jQuery(function(e){"use strict";e(".sub-panels").each(function(){var t=e("a[data-subpanel]",this),i=t.map(function(){return this.getAttribute("data-subpanel")}),n=this.getAttribute("data-show-panel");i.length&&(activateSubPanel(n,i),t.click(function(){return activateSubPanel(this.getAttribute("data-subpanel"),i),!1}))})});var inAutocomplete=!1,lastKeyEntered="";jQuery(function(e){"use strict";e("form input[type=text], form input[type=password]").on("keypress",function(t){var i=e(this).parents("form").find("input[type=submit].default-submit-action");return!i||i.length<=0||(!!phpbbCheckKey(t)||(!(t.which&&13===t.which||t.keyCode&&13===t.keyCode)||(i.click(),!1)))})}),jQuery(function(e){"use strict";function t(){styleConfig._resizeThrottled=!1,checkNavigation(!1),styleConfig.extendPosterProfile&&e(".postprofile + .postbody > div:only-child").each(function(){adjustPosterProfile(e(this))})}var i,n=["transform","webkitTransform","msTransform"];styleConfig.cookieConfig={prefix:"",path:"/",expires:new Date},styleConfig.cookieConfig.expires.setFullYear(styleConfig.cookieConfig.expires.getFullYear()+1),e("#phpbb.nojs").toggleClass("nojs hasjs"),e("#phpbb").toggleClass("hastouch",phpbb.isTouch),e("#phpbb.hastouch").removeClass("notouch"),e("form[data-focus]:first").each(function(){e("#"+this.getAttribute("data-focus")).focus()}),i=e("#phpbb").get(0);for(var s=0;s<n.length;s++)if(void 0!==i.style[n[s]]){e("#phpbb").addClass("can-transform");break}phpbb.setCookie=function(t,i,n){return n=e.extend({prefix:"",path:"/"},"object"==typeof n?n:{}),document.cookie=n.prefix+t+"="+encodeURIComponent(i)+(void 0===n.expires?"":";expires="+n.expires.toUTCString())+(n.path?";path="+n.path:"")+(n.domain?";domain="+n.domain:""),i},phpbb.getCookie=function(t,i){var n,s;return i=e.extend({prefix:"",path:"/"},"object"==typeof i?i:{}),n=new RegExp("(^| )"+i.prefix+t+"=([^;]+)(;|$)"),s=n.exec(document.cookie),s?decodeURIComponent(s[2]):null},phpbb.deleteCookie=function(t,i){return i=e.extend({prefix:"",path:"/"},"object"==typeof i?i:{}),document.cookie=i.prefix+t+"="+(i.path?"; path="+i.path:"")+(i.domain?"; domain="+i.domain:"")+"; expires=Thu, 01-Jan-70 00:00:01 GMT",null},initResponsiveNavigation(),parseDocument(e("body")),checkNavigation(!0),styleConfig._loaded=!0,styleConfig._resizeThrottled=!1,styleConfig._resizeQueued=!1,e(window).load(function(){checkNavigation(!0),styleConfig.extendPosterProfile&&e(".postprofile + .postbody > div:only-child").each(function(){adjustPosterProfile(e(this))})}),e(window).resize(function(){styleConfig._resizeThrottled?styleConfig._resizeQueued=!0:(t(),styleConfig._resizeThrottled=!0,styleConfig._resizeQueued=!1,setTimeout(function(){styleConfig._resizeThrottled=!1,styleConfig._resizeQueued&&t()},500))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
